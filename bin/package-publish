#!/usr/bin/env sh

# Bumps up a package version and publishes it.
#
# EXAMPLE
# NpmPublishVersion=patch ./package-publish ./@downforce/*
# NpmPublishVersion=minor ./package-publish ./@downforce/*
# NpmPublishVersion=major ./package-publish ./@downforce/*
# NpmPublishVersion= ./package-publish ./@downforce/*

set -e # errexit
set -u # nounset

case "$(dirname "$0")" in
    /*|./*) Dir=$(cd "$(dirname "$0")" && pwd);;
    *) Dir=$(cd "$PWD/$(dirname "$0")" && pwd);;
esac

: ${Npm:=npm}
: ${NpmVersionCmd:=version}
: ${NpmVersionArgs:=--no-git-tag-version}
: ${NpmPublishCmd:=publish}
: ${NpmPublishArgs:=--access public --auth-type legacy}
: ${NpmPublishVersion=minor}

for pkg; do
    if test ! -e "$pkg/package.json"; then
        echo "skipping invalid package '$pkg'."
        continue
    fi

    (
        case "$pkg" in
            /*|./*) cd "$pkg";;
            *) cd "$PWD/$pkg";;
        esac

        if test -n "$NpmPublishVersion"; then
            set -- $NpmVersionCmd $NpmVersionArgs $NpmPublishVersion
            $Npm "$@"

            printf -- 'Press Enter to continue'
            read answer
        fi

        set -- $NpmPublishCmd $NpmPublishArgs
        until $Npm "$@"; do
            printf -- 'Press Enter to retry'
            read answer
        done
    )
done
