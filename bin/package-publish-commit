#!/usr/bin/env sh

# Commits changes, bumps up package version and publishes it.
#
# EXAMPLE
# NpmPublishVersion=patch ./package-publish-commit ./@downforce/*
# NpmPublishVersion=minor ./package-publish-commit ./@downforce/*
# NpmPublishVersion=major ./package-publish-commit ./@downforce/*
# NpmPublishVersion= ./package-publish-commit ./@downforce/*

set -e # errexit
set -u # nounset

case "$(dirname "$0")" in
    /*|./*) Dir=$(cd "$(dirname "$0")" && pwd);;
    *) Dir=$(cd "$PWD/$(dirname "$0")" && pwd);;
esac

: ${Git:=git}
: ${Npm:=npm}

for pkg; do
    if test ! -e "$pkg/package.json"; then
        echo "skipping invalid package '$pkg'."
        continue
    fi

    pkg_name=$(npm --prefix "$pkg" pkg get name | tr -d '"')

    $Npm --prefix "$pkg" run --if-present build

    dirty=$($Git -C "$pkg" status --porcelain . | tail -n1)
    if test -n "$dirty"; then
        $Git -C "$pkg" add --all .
        $Git -C "$pkg" commit --edit --message "($pkg_name) "
    fi

    "$Dir/package-publish" "$pkg"

    pkg_version=$(npm --prefix "$pkg" pkg get version | tr -d '"')

    dirty=$($Git -C "$pkg" status --porcelain . | tail -n1)
    if test -n "$dirty"; then
        $Git -C "$pkg" add --all .
        $Git -C "$pkg" commit --message "($pkg_name) v$pkg_version"
    fi
done
